{
  "name": "badges",
  "version": "4.28.0",
  "description": "The definitive collection of badges for rendering",
  "homepage": "https://github.com/bevry/badges",
  "license": "Artistic-2.0",
  "keywords": [
    "+1",
    "60devs",
    "badge",
    "badges",
    "bitcoin",
    "boost lab",
    "boostlab",
    "browser",
    "buy me a coffee",
    "buymeacoffee",
    "coveralls",
    "coveralls.io",
    "crypto",
    "david",
    "david dm",
    "donate",
    "donation",
    "es2021",
    "facebook",
    "facebook follow",
    "facebook like",
    "flattr",
    "follow",
    "github",
    "github follow",
    "github sponsors",
    "github star",
    "give thanks",
    "google plus",
    "google+",
    "gratipay",
    "hacker news",
    "liberapay",
    "like",
    "module",
    "node",
    "nodeico",
    "npm",
    "npm downloads",
    "npm version",
    "open collective",
    "opencollective",
    "patreon",
    "paypal",
    "plus one",
    "quora",
    "quora follow",
    "reddit",
    "sauce labs",
    "saucelabs",
    "shields",
    "shields.io",
    "sixtydevs",
    "slack",
    "slackin",
    "star",
    "thanks app",
    "thanksapp",
    "tip",
    "tips",
    "travis",
    "travis ci",
    "travisci",
    "tweet",
    "twitter",
    "twitter follow",
    "typed",
    "types",
    "typescript",
    "waffle",
    "waffle.io",
    "wishlist"
  ],
  "badges": {
    "list": [
      "githubworkflow",
      "npmversion",
      "npmdownloads",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubWorkflow": "bevry",
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "githubUsername": "bevry",
      "githubRepository": "badges",
      "githubSlug": "bevry/badges",
      "npmPackageName": "badges"
    }
  },
  "funding": "https://bevry.me/fund",
  "author": "2015+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me)",
  "maintainers": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)"
  ],
  "contributors": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)",
    "Richard Walker <digitalsadhu@gmail.com> (https://github.com/digitalsadhu)"
  ],
  "bugs": {
    "url": "https://github.com/bevry/badges/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevry/badges.git"
  },
  "engines": {
    "node": ">=10"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "source",
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ES2021 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "compiled",
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    },
    {
      "description": "TypeScript compiled against ES2021 for Node.js 10 || 12 || 14 || 16 || 18 || 19 with Require for modules",
      "directory": "edition-es2021",
      "entry": "index.js",
      "tags": [
        "compiled",
        "javascript",
        "es2021",
        "require"
      ],
      "engines": {
        "node": "10 || 12 || 14 || 16 || 18 || 19",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2021 for Node.js 12 || 14 || 16 || 18 || 19 with Import for modules",
      "directory": "edition-es2021-esm",
      "entry": "index.js",
      "tags": [
        "compiled",
        "javascript",
        "es2021",
        "import"
      ],
      "engines": {
        "node": "12 || 14 || 16 || 18 || 19",
        "browsers": false
      }
    }
  ],
  "types": "./compiled-types/",
  "type": "module",
  "main": "edition-es2021/index.js",
  "exports": {
    "node": {
      "import": "./edition-es2021-esm/index.js",
      "require": "./edition-es2021/index.js"
    },
    "browser": {
      "import": "./edition-browsers/index.js"
    }
  },
  "browser": "edition-browsers/index.js",
  "module": "edition-browsers/index.js",
  "devDependencies": {
    "@bevry/update-contributors": "^1.21.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "assert-helpers": "^8.4.0",
    "eslint": "^8.36.0",
    "eslint-config-bevry": "^3.27.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "kava": "^5.15.0",
    "make-deno-edition": "^1.3.0",
    "prettier": "^2.8.6",
    "projectz": "^2.22.0",
    "surge": "^0.23.1",
    "typedoc": "^0.23.28",
    "typescript": "5.0.2",
    "valid-directory": "^3.9.0",
    "valid-module": "^1.17.0"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:deno && npm run our:compile:edition-browsers && npm run our:compile:edition-es2021 && npm run our:compile:edition-es2021-esm && npm run our:compile:types",
    "our:compile:deno": "make-deno-edition --attempt",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2021 --outDir ./edition-browsers --project tsconfig.json && ( test ! -d edition-browsers/source || ( mv edition-browsers/source edition-temp && rm -Rf edition-browsers && mv edition-temp edition-browsers ) )",
    "our:compile:edition-es2021": "tsc --module commonjs --target ES2021 --outDir ./edition-es2021 --project tsconfig.json && ( test ! -d edition-es2021/source || ( mv edition-es2021/source edition-temp && rm -Rf edition-es2021 && mv edition-temp edition-es2021 ) ) && echo '{\"type\": \"commonjs\"}' > edition-es2021/package.json",
    "our:compile:edition-es2021-esm": "tsc --module ESNext --target ES2021 --outDir ./edition-es2021-esm --project tsconfig.json && ( test ! -d edition-es2021-esm/source || ( mv edition-es2021-esm/source edition-temp && rm -Rf edition-es2021-esm && mv edition-temp edition-es2021-esm ) ) && echo '{\"type\": \"module\"}' > edition-es2021-esm/package.json",
    "our:compile:types": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --declarationMap --declarationDir ./compiled-types && ( test ! -d compiled-types/source || ( mv compiled-types/source edition-temp && rm -Rf compiled-types && mv edition-temp compiled-types ) )",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:contributors && npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "npm run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --exclude '**/+(*test*|node_modules)' --excludeExternals --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:module && npm run our:verify:prettier",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "test": "node ./edition-es2021/test.js"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  }
}
{
  "name": "badges",
  "version": "4.13.0",
  "description": "The definitive collection of badges for rendering",
  "homepage": "https://github.com/bevry/badges",
  "license": "MIT",
  "keywords": [
    "+1",
    "60devs",
    "badge",
    "badges",
    "bitcoin",
    "boost lab",
    "boostlab",
    "browser",
    "buy me a coffee",
    "buymeacoffee",
    "coveralls",
    "coveralls.io",
    "crypto",
    "david",
    "david dm",
    "deno",
    "deno-edition",
    "deno-entry",
    "denoland",
    "donate",
    "donation",
    "facebook",
    "facebook follow",
    "facebook like",
    "flattr",
    "follow",
    "github",
    "github follow",
    "github sponsors",
    "github star",
    "give thanks",
    "google plus",
    "google+",
    "gratipay",
    "hacker news",
    "liberapay",
    "like",
    "module",
    "node",
    "nodeico",
    "npm",
    "npm downloads",
    "npm version",
    "open collective",
    "opencollective",
    "patreon",
    "paypal",
    "plus one",
    "quora",
    "quora follow",
    "reddit",
    "sauce labs",
    "saucelabs",
    "shields",
    "shields.io",
    "sixtydevs",
    "slack",
    "slackin",
    "star",
    "thanks app",
    "thanksapp",
    "tip",
    "tips",
    "travis",
    "travis ci",
    "travisci",
    "tweet",
    "twitter",
    "twitter follow",
    "typed",
    "types",
    "typescript",
    "waffle",
    "waffle.io",
    "wishlist"
  ],
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com",
      "githubUsername": "bevry",
      "githubRepository": "badges",
      "githubSlug": "bevry/badges",
      "npmPackageName": "badges"
    }
  },
  "funding": "https://bevry.me/fund",
  "author": "2015+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me)",
  "maintainers": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)"
  ],
  "contributors": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)",
    "Richard Walker <digitalsadhu@gmail.com> (https://github.com/digitalsadhu)"
  ],
  "bugs": {
    "url": "https://github.com/bevry/badges/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevry/badges.git"
  },
  "engines": {
    "node": ">=10"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ESNext for Node.js with Require for modules",
      "directory": "edition-esnext",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": "10 || 12 || 13 || 14",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2019 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    },
    {
      "description": "TypeScript source code made to be compatible with Deno",
      "directory": "edition-deno",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import",
        "deno"
      ],
      "engines": {
        "deno": true,
        "browsers": true
      }
    }
  ],
  "types": "./compiled-types/",
  "type": "commonjs",
  "main": "edition-esnext/index.js",
  "deno": "edition-deno/index.ts",
  "browser": "edition-browsers/index.js",
  "module": "edition-browsers/index.js",
  "devDependencies": {
    "@bevry/update-contributors": "^1.9.0",
    "@typescript-eslint/eslint-plugin": "^3.3.0",
    "@typescript-eslint/parser": "^3.3.0",
    "assert-helpers": "^6.8.0",
    "eslint": "^7.3.0",
    "eslint-config-bevry": "^3.8.0",
    "eslint-config-prettier": "^6.7.0",
    "eslint-plugin-prettier": "^3.1.4",
    "kava": "^5.7.0",
    "make-deno-edition": "^0.10.0",
    "prettier": "^2.0.5",
    "projectz": "^2.9.0",
    "surge": "^0.21.3",
    "typedoc": "^0.17.7",
    "typescript": "^3.9.5",
    "valid-directory": "^2.5.0",
    "valid-module": "^1.6.0"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "yarn run our:compile:deno && yarn run our:compile:edition-browsers && yarn run our:compile:edition-esnext && yarn run our:compile:types",
    "our:compile:deno": "make-deno-edition --attempt",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2019 --outDir ./edition-browsers --project tsconfig.json && ( test ! -d edition-browsers/source || ( mv edition-browsers/source edition-temp && rm -Rf edition-browsers && mv edition-temp edition-browsers ) )",
    "our:compile:edition-esnext": "tsc --module commonjs --target ESNext --outDir ./edition-esnext --project tsconfig.json && ( test ! -d edition-esnext/source || ( mv edition-esnext/source edition-temp && rm -Rf edition-esnext && mv edition-temp edition-esnext ) )",
    "our:compile:types": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --declarationMap --declarationDir ./compiled-types && ( test ! -d compiled-types/source || ( mv compiled-types/source edition-temp && rm -Rf compiled-types && mv edition-temp compiled-types ) )",
    "our:deploy": "echo no need for this project",
    "our:meta": "yarn run our:meta:contributors && yarn run our:meta:docs && yarn run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "yarn run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "yarn run our:release:prepare && yarn run our:release:check-changelog && yarn run our:release:check-dirty && yarn run our:release:tag && yarn run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "yarn run our:clean && yarn run our:compile && yarn run our:test && yarn run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "yarn run our:setup:install",
    "our:setup:install": "/usr/local/bin/yarn install --ignore-engines",
    "our:test": "yarn run our:verify && yarn test",
    "our:verify": "yarn run our:verify:directory && yarn run our:verify:eslint && yarn run our:verify:module && yarn run our:verify:prettier",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "test": "node ./edition-esnext/test.js"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  }
}
